<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--使用Aspectj代替SpringAOP proxy-target-class="true"：使用cglib而不是jdk的来生成代理方法
      AOP有Aspectj和SpringAOP,代理方法有cglib(动态地对目标对象进行子类化来实现AOP代理,业务对象没有实现任何接口的时候默认会选择CGLIB)和jdk(只针对实现了接口的业务对象)
    -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--Spring扫描Controller注解-->
    <context:component-scan base-package="org.wonderming.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--Spring向容器注入配置@Autowired和@Resource-->
    <context:annotation-config/>

    <bean id="sendMessage" class="org.wonderming.activemq.SendMessage"/>

    <!--系统日志-->
    <bean id="systemController" class="org.wonderming.aop.SystemControllerAspect">
        <property name="systemLogService" ref="systemLogService"/>
        <!--根据方法前缀定义日志类型-->
        <!--获取数据-->
        <property name="getType">
            <list value-type="java.lang.String">
                <value>get</value>
                <value>find</value>
            </list>
        </property>
        <!--添加数据-->
        <property name="addType" value="add"/>
        <!--更新数据-->
        <property name="updateType" value="update"/>
        <!--删除数据-->
        <property name="deleteType" value="delete"/>
    </bean>

    <!--jedis连接池-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"/>
    <!--jedis连接工厂-->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="timeout" value="${redis.timeout}"/>
        <property name="usePool" value="true"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
    </bean>
    <!--spring session创建springSessionRepositoryFilter 默认session超时时间为30分钟-->
    <bean id="redisHttpSessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration"/>
    <!--&lt;!&ndash; 让Spring Session不再执行config命令 &ndash;&gt;-->
    <!--<util:constant static-field="org.springframework.session.data.redis.config.ConfigureRedisAction.NO_OP"/>-->


</beans>